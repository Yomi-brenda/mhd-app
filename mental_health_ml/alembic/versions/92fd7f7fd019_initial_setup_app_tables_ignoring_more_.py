"""initial_setup_app_tables_ignoring_more_mlflow_and_backup

Revision ID: 92fd7f7fd019
Revises: 
Create Date: 2025-05-24 14:44:15.994159

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '92fd7f7fd019'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assessment_questionnaires',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessment_questionnaires_name'), 'assessment_questionnaires', ['name'], unique=True)
    op.create_table('ml_model_versions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_name', sa.String(), nullable=False),
    sa.Column('version_tag', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('mlflow_run_id', sa.String(), nullable=True),
    sa.Column('dvc_path_to_model', sa.String(), nullable=True),
    sa.Column('deployment_status', sa.String(), nullable=True),
    sa.Column('deployed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version_tag')
    )
    op.create_index(op.f('ix_ml_model_versions_model_name'), 'ml_model_versions', ['model_name'], unique=False)
    op.create_table('resources_content',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('content_body', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('target_conditions', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('assessment_questions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('questionnaire_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(), nullable=False),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('order_in_questionnaire', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['questionnaire_id'], ['assessment_questionnaires.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('session_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_assessment_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('questionnaire_id', sa.Integer(), nullable=False),
    sa.Column('session_status', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['questionnaire_id'], ['assessment_questionnaires.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_resource_interactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resource_id'], ['resources_content.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('sender_type', sa.String(), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('language_code', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ml_assessment_predictions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=True),
    sa.Column('predicted_score', sa.Float(), nullable=True),
    sa.Column('predicted_category', sa.String(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('interpretation_text', sa.Text(), nullable=True),
    sa.Column('prediction_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('raw_model_output', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['user_assessment_sessions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('user_assessment_responses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_value', sa.String(), nullable=True),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('response_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['assessment_questions.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['user_assessment_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ml_crisis_predictions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chat_message_id', sa.UUID(), nullable=True),
    sa.Column('chat_session_id', sa.UUID(), nullable=True),
    sa.Column('model_version', sa.String(), nullable=True),
    sa.Column('is_crisis_detected', sa.Boolean(), nullable=True),
    sa.Column('crisis_type', sa.String(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('triggering_text_segment', sa.Text(), nullable=True),
    sa.Column('prediction_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('action_taken', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['chat_message_id'], ['chat_messages.id'], ),
    sa.ForeignKeyConstraint(['chat_session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ml_emotion_predictions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chat_message_id', sa.UUID(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=True),
    sa.Column('detected_emotion', sa.String(), nullable=True),
    sa.Column('confidence_scores', sa.JSON(), nullable=True),
    sa.Column('prediction_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['chat_message_id'], ['chat_messages.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chat_message_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ml_emotion_predictions')
    op.drop_table('ml_crisis_predictions')
    op.drop_table('user_assessment_responses')
    op.drop_table('ml_assessment_predictions')
    op.drop_table('chat_messages')
    op.drop_table('user_resource_interactions')
    op.drop_table('user_assessment_sessions')
    op.drop_table('chat_sessions')
    op.drop_table('assessment_questions')
    op.drop_table('users')
    op.drop_table('resources_content')
    op.drop_index(op.f('ix_ml_model_versions_model_name'), table_name='ml_model_versions')
    op.drop_table('ml_model_versions')
    op.drop_index(op.f('ix_assessment_questionnaires_name'), table_name='assessment_questionnaires')
    op.drop_table('assessment_questionnaires')
    # ### end Alembic commands ###
